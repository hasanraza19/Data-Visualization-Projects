install.packages("Ecdat")
install.packages("carData")
install.packages("DAAG")
install.packages("gapminder")
library("gapminder")
gapminder
unitedstates <- subset(gapminder,country == "United States", select=c(country, year, lifeExp, gdpPercap))
unitedstates
barplot(unitedstates$lifeExp, main = "Life Expectancy for the US Over Years", xlab = "Years", ylab = "Life Expectancy", names.arg = unitedstates$year,)
plot(unitedstates$year,unitedstates$gdpPercap, xLab = "Years", yLab = "GDP", type="o")
plot(unitedstates$year,unitedstates$gdpPercap, main = "GDP over Years", xlab = "Years", ylab = "GDP", type="o")
warnings()
warnings()
library(carprice)
library(DAAG)
DAAG
carprice
hist(carprice$MPG.city)
hist(carprice$MPG.city, main = "Histogram of MPGs", xlab = "MPG")
d <- density(carprice$MPG.city)
plot(d)
plot(d, main = "Density Plot of Prices", xlab = "Prices")
library(Ecdat)
OFP
qplot(OFP$ofp, main = "Box Plot of Physician's Office Visits")
library(ggplot2)
qplot(OFP$ofp, main = "Box Plot of Physician's Office Visits")
a <- ggplot(OFP$ofp, aes(x=dose, y = len)) + geom_boxplot()
a <- ggplot(OFP, aes(x=ofp, y = age)) + geom_boxplot()
a
a <- ggplot(OFP, aes(x=ofp)) + geom_boxplot()
a
a <- ggplot(OFP, aes( y = ofp)) + geom_boxplot()
a
ggplot(OFP, aes( y = ofp)) + geom_boxplot()
ggplot(OFP, aes( y = ofp), ylab = "number of visits to physicians office") + geom_boxplot()
ggplot(OFP, aes( y = ofp), main = "number of visits to physicians office") + geom_boxplot()
ggplot(OFP, aes( y = ofp), main = "number of visits to physicians office") + geom_boxplot(main = "number of visits to physicians office)
q
C
ggplot(OFP, aes( y = ofp), ) + geom_boxplot()
ggplot(OFP, aes( y = ofp), ) + geom_boxplot() + scale_y_continuous(name = "Number of visits to physician's office")
ggplot(OFP, aes( y = ofp), ) + geom_boxplot() + scale_y_continuous(name = "Number of visits to physician's office") + ggtitle("Boxplot of visits to physician's office")
ggplot(OFP, aes( y = emr), ) + geom_boxplot() + scale_y_continuous(name = "Number of visits to Emergency Room") + ggtitle("Boxplot of Number of Emergency Room Visits")
ggplot(OFP, aes( y = hosp), ) + geom_boxplot() + scale_y_continuous(name = "Number of visits to Emergency Room") + ggtitle("Boxplot of Number of Emergency Room Visits")
ggplot(OFP, aes( y = numchron), ) + geom_boxplot() + scale_y_continuous(name = "Number of visits to Emergency Room") + ggtitle("Boxplot of Number of Emergency Room Visits")
ggplot(OFP, aes( y = numchron), ) + geom_boxplot() + scale_y_continuous(name = "Number of Chronic Illnesses") + ggtitle("Boxplot of Number of Chronic Illnesses")
ggplot(OFP, aes( y = hosp), ) + geom_boxplot() + scale_y_continuous(name = "Number of visits to Hospital") + ggtitle("Boxplot of Number of Hospital Visits")
gapminder
gm <- gapminder[order(gapminder$country, -abs(gapminder$gdpPercap)),]
gm[!duplicated(gm$country)]
library(data.table)
gm <- gapminder
aggregate(gm$gdpPercap, by = list(gm$country), max)
gm
gm <- aggregate(gm$gdpPercap, by = list(gm$country), max)
gm
gm <- gapminder
gm <- aggregate(gm$year, by = list(gm$country), max)
gm
aggregate(Value ~ country, data = gapminder, max)
gm <- gapminder
aggregate(gm$year, by = list(gm$country), max)
aggregate(Value ~ country, data = gapminder, max)
aggregate(year ~ country, data = gapminder, max)
gm <- gapminder
aggregate(gm$year, gm$gdpPercap, by = list(gm$country), max)
gm <- gapminder
gm[gm$year=="2007",]
gm <- gm[gm$year=="2007",]
gm
ggplot(gm, aes(x = country, y = gdpPercap)) + geom_dotplot(binaxis='y', stackdir='center')
ggplot(gm, aes(x = country, y = gdpPercap)) + geom_dotplot(binaxis='y', stackdir='center', binwidth = 50)
ggplot(gm, aes(x = country, y = gdpPercap)) + geom_dotplot(binaxis='y', stackdir='center', binwidth = 35)
ggplot(gm, aes(x = country, y = gdpPercap)) + geom_dotplot(binaxis='y', stackdir='center', binwidth = 30)
ggplot(gm, aes(x = country, y = gdpPercap)) + geom_dotplot(binaxis='y', stackdir='center')
split(gm, cut(gm$country, 3))
gm1 <- gm[c(1:50)]
gm1 <- gm[r(1:50)]
gm1 <- gm[1:50]
gm[1:2]
gm[1:2,]
gm1<- gm[1:50,]
gm1
ggplot(gm1, aes(x = country, y = gdpPercap)) + geom_dotplot(binaxis='y', stackdir='center')
gm2<- gm[50:100,]
ggplot(gm2, aes(x = country, y = gdpPercap)) + geom_dotplot(binaxis='y', stackdir='center')
gm2<- gm[100:148,]
ggplot(gm2, aes(x = country, y = gdpPercap)) + geom_dotplot(binaxis='y', stackdir='center')
OFP
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point()
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point() + scale_y_continuous(name = "Number of Chronic Conditions") + scale_x_continuous(name = "Family Income") + ggtitle("Family Income x Number of Chronic Illnesses Sorted By Sex")
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point() + scale_y_continuous(name = "Number of Chronic Conditions") + scale_x_continuous(name = "Family Income") + ggtitle("Family Income x Number of Chronic Illnesses Sorted By Sex") + annotate("text", x = c(20), y = c(3), label = c("This female had 3 chronic illnesses") , color="orange", size=5 , angle=45, fontface="bold")
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point() + scale_y_continuous(name = "Number of Chronic Conditions") + scale_x_continuous(name = "Family Income") + ggtitle("Family Income x Number of Chronic Illnesses Sorted By Sex") + annotate("text", x = c(20), y = c(3), label = c("This female had 3 chronic illnesses") , color="orange", size=3 , angle=0, fontface="bold")
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point() + scale_y_continuous(name = "Number of Chronic Conditions") + scale_x_continuous(name = "Family Income") + ggtitle("Family Income x Number of Chronic Illnesses Sorted By Sex") + annotate("text", x = c(20), y = c(3), label = c("This female had 3 chronic illnesses") , color="orange", size=3 , angle=275, fontface="bold")
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point() + scale_y_continuous(name = "Number of Chronic Conditions") + scale_x_continuous(name = "Family Income") + ggtitle("Family Income x Number of Chronic Illnesses Sorted By Sex") + annotate("text", x = c(20), y = c(3), label = c("This female had 3 chronic illnesses") , color="orange", size=3 , angle=275, fontface="bold") + annotate("segment", x = 30, xend = 20, y = 0, yend = 2, colour = "pink", size=3, alpha=0.6, arrow=arrow())
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point() + scale_y_continuous(name = "Number of Chronic Conditions") + scale_x_continuous(name = "Family Income") + ggtitle("Family Income x Number of Chronic Illnesses Sorted By Sex") + annotate("text", x = c(0), y = c(30), label = c("This female had 3 chronic illnesses") , color="orange", size=3 , angle=275, fontface="bold") + annotate("segment", x = 30, xend = 20, y = 0, yend = 2, colour = "pink", size=3, alpha=0.6, arrow=arrow())
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point() + scale_y_continuous(name = "Number of Chronic Conditions") + scale_x_continuous(name = "Family Income") + ggtitle("Family Income x Number of Chronic Illnesses Sorted By Sex") + annotate("text", x = c(30), y = c(0), label = c("This female had 3 chronic illnesses") , color="orange", size=3 , angle=275, fontface="bold") + annotate("segment", x = 30, xend = 20, y = 0, yend = 2, colour = "pink", size=3, alpha=0.6, arrow=arrow())
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point() + scale_y_continuous(name = "Number of Chronic Conditions") + scale_x_continuous(name = "Family Income") + ggtitle("Family Income x Number of Chronic Illnesses Sorted By Sex") + annotate("text", x = c(30), y = c(0), label = c("This female had 3 chronic illnesses") , color="orange", size=3 , angle=0, fontface="bold") + annotate("segment", x = 30, xend = 20, y = 0, yend = 2, colour = "pink", size=3, alpha=0.6, arrow=arrow())
ggplot(OFP, aes(x = faminc, y = numchron, color = sex)) + geom_point() + scale_y_continuous(name = "Number of Chronic Conditions") + scale_x_continuous(name = "Family Income") + ggtitle("Family Income x Number of Chronic Illnesses Sorted By Sex") + annotate("text", x = c(30), y = c(0), label = c("This female had 3 chronic illnesses") , color="orange", size=3 , angle=0, fontface="bold") + annotate("segment", x = 30, xend = 20, y = 0, yend = 3, colour = "pink", size=3, alpha=0.6, arrow=arrow())
States
library(carData)
States
matrixx <- States[0,2,3,5,6]
States[,c("region","SATV","SATM","dollars","pay")]
matrixx <- States[,c("region","SATV","SATM","dollars","pay")]
install.packages("ggcorrplot")
library(ggcorrplot)
data(matrixx)
matrixx
matrixx <- round(cor(matrixx), 1)
ggcorrplot(matrixx, method = "circle", colors = c("red", "green", "blue"), lab=TRUE)
pp <- cor_pmat(matrixx)
matrixx
States
corr <- round(cor(matrixx), 1)
mtcars
data(mtcars)
data(States)
States
data(States)
corr <- round(cor(States), 1)
corr <- round(cor(mtcars), 1)
data(matrixx)
corr <- round(cor(mtcars), 1)
States
mydata <- States
mydata
mydata <- States[,c("region","SATV","SATM","dollars","pay")]
mydata
ggcorrplot(matrixx, method = "circle", colors = c("red", "green", "blue"), lab=TRUE)
install.packages("GGally")
library("GGally")
ggpairs(mydata)
OFP
questionsixdata <- OFP[,c("ofp","emr","hosp","numchron","age", "sex", "maried", "school", "faminc", "employed", "region")]
questionsixdata
ggplot(questionsixdata, aes(x = age, y = ofp, color = sex)) + geom_point()
ggplot(questionsixdata, aes(x = age, y = ofp, color = sex)) + geom_point() +labs(y= "Physician Office Visits", x = "Age") +ggtitle("Age x Number of Physician Office Visits Differentiated By Sex")
ggplot(questionsixdata, aes(x = numchron, y = hosp, color = maried)) + geom_point() +labs(y= "Number of Chronic Illnesses", x = "Number of Hospitalizations") +ggtitle("Number of Hospitalizations x Number of Chronic Illnesses Differentiated By Marriage Status")
ggplot(questionsixdata, aes(x = school, y = faminc, color = employed)) + geom_point() +labs(y= "Family Income", x = "School") +ggtitle("School x Family Income Differentiated By Employment")
ggplot(questionsixdata, aes(x = school, y = faminc, color = employed)) + geom_point() +labs(y= "Family Income", x = "School") +ggtitle("School x Family Income Differentiated By Employment")
ggplot(questionsixdata, aes(x = region, y = ofp)) + geom_bar() +labs(y= "Physician Office Visits", x = "Region") +ggtitle("Physician Office Visits per Region")
ggplot(questionsixdata, aes(x = region, y = ofp)) + geom_point() +labs(y= "Physician Office Visits", x = "Region") +ggtitle("Physician Office Visits per Region")
ggplot(questionsixdata, aes(x = region, y = numchron)) + geom_point() +labs(y= "Physician Office Visits", x = "Region") +ggtitle("Physician Office Visits per Region")
ggplot(questionsixdata, aes(x = region, y = hosp)) + geom_point() +labs(y= "Physician Office Visits", x = "Region") +ggtitle("Physician Office Visits per Region")
ggplot(questionsixdata, aes(x=ofp)) + geom_bar()
ggplot(questionsixdata, aes(x=ofp, region)) + geom_bar()
ggplot(questionsixdata, aes(x = region, y = hosp)) + geom_point() +labs(y= "Physician Office Visits", x = "Region") +ggtitle("Physician Office Visits per Region")
ggplot(questionsixdata, aes(x = region, y = ofp)) + geom_point() +labs(y= "Physician Office Visits", x = "Region") +ggtitle("Physician Office Visits per Region")
setwd("C:\\Users\\hasan\\Desktop\\mydirectory")
vocabdata <- read.csv("Vocab.csv")
vocabdata
ggplot(vocabdata, aes(x = vocabulary, y = education, color = sex)) + geom_point() +labs(y= "Education Score", x = "Vocabulary Level") +ggtitle("Vocabulary Level x Education Level Differentiated By Sex")
savehistory(file = "hist.txt")
savehistory("C:/Users/hasan/Desktop/mydirectory/aaa.Rhistory")
